<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.OrdersMapper">
	<!-- 开启二级缓存，默认使用了PerpetualCache -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" flushInterval="60000"/>
	<select id="findUserById" parameterType="int" resultType="com.mybatis.po.User">
		SELECT * FROM USER WHERE id=#{id}
	</select>
	
	<!-- 一对一：resultType方式 -->
	<select id="findUserAndOrders" resultType="com.mybatis.po.OrdersEx">
		SELECT orders.id,orders.user_id,orders.number,user.username,user.sex FROM USER,orders 
		WHERE user.id=orders.user_id
	</select>
	<!-- 一对一：resultMap方式 -->
	<resultMap type="com.mybatis.po.OrdersEx" id="retMap">
	<!-- orders订单信息 -->
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<!-- 一对一：用户信息 -->
		<!-- association：一对一关联映射 -->
		<!-- property：关联信息查询的结果将要映射的扩展类中的对象属性名称 -->
		<!-- id标签：建议在关联查询时必须写上，不写不会报错，但是会影响性能 -->
		<association property="user" javaType="com.mybatis.po.User">
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result column="sex" property="sex"/>
		</association>
	</resultMap>
	<!-- 查询订单信息，关联查询用户信息 -->
	<select id="findUserAndOrdersAsRetMap" resultMap="retMap">
		SELECT orders.id,orders.user_id,orders.number,user.username,user.sex FROM USER,orders 
		WHERE user.id=orders.user_id
	</select>
	<!-- 一对多 查询订单信息，关联查询订单明细信息及用户信息-->
	<!-- extends：可以继承一个已有的resultMap，指定resultMap的唯一标示即可 -->
	<!-- 注意：继承时，只能继承type类型是一样的resultMap -->
	<resultMap type="com.mybatis.po.OrdersEx" id="detail" extends="retMap">
		<!-- 订单明细信息（一对多） -->
		<!-- collection：映射一对多关系 -->
		<collection property="orderdetail" ofType="com.mybatis.po.Orderdetail">
			<id column="id" property="id"/>
			<result column="items_id" property="itemsId"/>
			<result column="items_num" property="itemsNum"/>
		</collection>
	</resultMap>
		<!-- 一对多   查询订单信息，关联查询订单明细信息及用户信息 -->
	<select id="findUserAndOrdersAndDetail" resultMap="detail">
		SELECT orders.id,orders.user_id,orders.number,user.username,user.sex,
		orderdetail.id,orderdetail.items_id,orderdetail.items_num
		FROM USER,orders,orderdetail
		WHERE user.id=orders.user_id AND orders.id=orderdetail.orders_id
	</select>
	<!-- 多对多 查询用户信息，关联查询该用户购买的商品信息-->
	<resultMap type="com.mybatis.po.User" id="items">
		<!-- 用户信息 -->
		<id column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result column="sex" property="sex"/>
			<!-- 订单信息（用户表对订单表 一对多） -->
			<collection property="orders" ofType="com.mybatis.po.Orders">
				<id column="id" property="id"/>
				<result column="user_id" property="userId"/>
				<result column="number" property="number"/>
					<!-- 订单细节信息（订单表对订单细节表  一对多） -->
					<collection property="detailList" ofType="com.mybatis.po.Orderdetail">
						<id column="id" property="id"/>
						<result column="items_id" property="itemsId"/>
						<result column="items_num" property="itemsNum"/>
							<!-- 商品信息（订单细节表对商品表    一对一） -->
							<association property="items" javaType="com.mybatis.po.Items">
								<id column="items_id" property="id"/>
								<result column="name" property="name"/>
								<result column="price" property="price"/>
							</association>
					</collection>
			</collection>
	</resultMap>
	<!-- 查询用户信息，关联查询该用户购买的商品信息 -->
	<select id="findUserAndOrdersAndDetailAndItems" resultType="items">
		SELECT 
		orders.id,orders.user_id,orders.number,
		user.username,user.sex,
		orderdetail.id,orderdetail.items_id,orderdetail.items_num,
		items.name,items.price
		FROM USER,orders,orderdetail,items
		WHERE user.id=orders.user_id AND orders.id=orderdetail.orders_id AND items.id=orderdetail.items_id
	</select>
	
	<!-- 延迟加载 -->
	<!-- lazyLoadingRstMap -->
	<!-- <resultMap type="ordersExt" id="lazyLoadingRstMap">
		订单信息
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="number" property="number" /> -->
		<!-- 用户信息（一对一） -->
		<!-- select：指定关联查询的查询statement（即查询用户的statement的id），然后将查询结果，封装到property属性指定的变量中 -->
		<!-- column：通过column指定的列所查询出的结果，作为select指的statement的入参 -->
		<!-- 注意：如果select指定的statement，入参需要多个值，需要在column中{col1=prop1,col2=prop2} -->
		<!-- <association property="user"
			select="com.itheima.mybatis.mapper.UserMapper.findUserById" column="user_id"></association>
		</resultMap> -->

		<!-- 延迟加载 -->
		<!-- <select id="findOrderAndUserLazyLoading" resultMap="lazyLoadingRstMap">
		SELECT * FROM
		orders
		</select> -->
</mapper>